/* This linker script generated from xt-genldscripts.tpp for LSP nort */
/* Linker Script for default link */

/*
	flash rom version
*/


MEMORY
{
	/*the following section len depends on asic design*/

	i_ram_vector :                 org = 0x40000000, len = 0x400
	i_ram :                        org = 0x40000400, len = 0x3FC00

/*	i_rom :                        org = 0x48000000, len = 0x140000*/        /*10*128k*/
/*	d_rom :                        org = 0x3F800000, len = 0xC0000*/         /*6*128k*/
	i_rom :                        org = 0x48000000, len = 0x60000        /*3*128k*/
	d_rom :                        org = 0x3F800000, len = 0x40000        /*2*128k*/

/*	d_ram :                        org = 0x3FD00000, len = 0x23FC00*/
/*	d_ram :                        org = 0x3FD00000, len = 0x23FC00 - 0x10000*/
/*	d_ram :                        org = 0x3FD00000, len = 0x23FC00 - 0x1000*/
/*	d_ram :                        org = 0x3FD00000, len = 0x23FC00 - 0x1F0000*/
/*	d_ram :                        org = 0x3FD00000, len = 0x23FC00 - 0x200000*/

/*	d_ram :                        org = 0x3FDC0000, len = (0xA0000-0x400)*/ /*5x128k*/
	d_ram :                        org = 0x3FDC0000, len = (0x78000-0x400) /*480k*/
	
	
/*	d_ram_stack :                  org = 0x3FD00000+0x23FC00, len = 0x400*/ /*0x3FF3FC00 --> + 0x400*/
/*	d_ram_stack :                  org = 0x3FDC0000+0xA0000-0x400, len = 0x400*/
	d_ram_stack :                  org = 0x3FDC0000+0x78000-0x400, len = 0x400


/*	d_ram_codec :                  org = 0x3FD00000+0x23FC00-0x10000, len = 0x10000*/ /*h3ff18c50*/
/*	d_ram_codec :                  org = 0x3FD00000+0x23FC00-0x1F0000, len = 0x1F0000*/ /*0x3FD3FC00*/
/*	d_ram_codec :                  org = 0x3FD00000+0x23FC00-0x200000, len = 0x200000*/ /*0x3FD3FC00*/
/*	d_ram_codec :                  org = 0x3FD3FC00, len = 0x200000*/
/*	d_ram_codec :                  org = 0x3FDC0000+0xA0000-0x400-0x20000, len = 0x20000*/
/*	d_ram_codec :                  org = 0x3FDC0000+0x78000-0x400-0x20000, len = 0x20000*/

/*	psram :                        org = 0x70000000, len = 0x200000*/
/*	d_ram_codec :                  org = 0x70000000, len = 0x200000*/


	/*DRAM*/
/*	stream_memory_bss :            org = 0x3FDC0000+0x78000-0x400-0x34000-0x22000, len = 0x22000*/
	stream_memory_bss :            org = 0x70800000, len = 0x40000

	/*ROM*/
/*	codec_memory_bss :             org = 0x6C0E0000, len = 0x10000*/

	/*PSRAM*/
/*	codec_memory_bss :             org = 0x70300000, len = 0x20000*/

/*	codec_memory_bss :             org = 0x3FDC0000+0x78000-0x400-0x34000, len = 0x34000*/ /*only for ddplus71 test*/
/*	codec_memory_bss :             org = 0x70900000, len = 0x6E0000*/ /*for atmos test*/
	codec_memory_bss :             org = 0x70700000, len = 0x6E0000 /*for atmos test*/


/*	codec_memory_rodata :          org = 0x70400000, len = 0x10000*/

/*	external_memory_bss :          org = 0x70800000, len = 0x100000*/
	external_memory_bss :          org = 0x70600000, len = 0x100000


	/*FPGA rom*/
/*	rom_boot :                     org = 0x6C000000, len = 0xC00
	rom_vector :                   org = 0x6C000C00, len = 0x400
	rom_text :                     org = 0x6C001000, len = 0x200000 - 0x1000
*/


	/*psram*/
	rom_boot :                     org = 0x70000000, len = 0xC00
	rom_vector :                   org = 0x70000C00, len = 0x400
	rom_text :                     org = 0x70001000, len = 0x300000 - 0x1000

	xa_ddplus71_dec_lib_text :     org = 0x70e00000, len = 0xd260
/*	xa_ddplus71_dec_lib_rodata :   org = 0x70e0d260, len = 0x5a50*/
	xa_ddplus71_dec_lib_rodata :   org = 0x70e0d260, len = 0x5a50

	rom_libc_text :                org = 0x70eaa400, len = 0x019C0+0x240
	rom_atmos_codec_text :         org = 0x70eac000, len = 0xD98E0+0x180
	rom_atmos_codec_rodata :       org = 0x70F85A60, len = 0x7A330+0x180
	rom_libc_rodata :              org = 0x70FFFF10, len = 0xF0

	xa_libc_text :                 org = 0x70eaa400, len = 0x19c0
	xa_dapv2_lib_text :            org = 0x70eac000, len = 0x37480	
	xa_mat_dec_lib_text :          org = 0x70ee3480, len = 0xada0
	xa_ddplus_udc_lib_text :       org = 0x70eee220, len = 0x41380
	xa_dmx_lib_text :              org = 0x70f2f5a0, len = 0x2cf0
	xa_rsrc_lib_text :             org = 0x70f32290, len = 0x43a0
	xa_oar_lib_text :              org = 0x70f36630, len = 0xfed0
	xa_truehd_dec_lib_text :       org = 0x70f46500, len = 0x15470
	xa_fader_lib_text :            org = 0x70f5b970, len = 0x4d0
	xa_dlb_intrinsics_lib_text :   org = 0x70f5be40, len = 0x29aa0

	xa_dapv2_lib_rodata :          org = 0x70f85a60, len = 0x2bca0
	xa_mat_dec_lib_rodata :        org = 0x70fb1700, len = 0x4d80
	xa_ddplus_udc_lib_rodata :     org = 0x70fb6480, len = 0x10650
	xa_dmx_lib_rodata :            org = 0x70fc6ae0, len = 0x32e0
	xa_rsrc_lib_rodata :           org = 0x70fc9dc0, len = 0x510
	xa_oar_lib_rodata :            org = 0x70fca2e0, len = 0x64e0
	xa_truehd_dec_lib_rodata :     org = 0x70fd07c0, len = 0x1f70
	xa_fader_lib_rodata :          org = 0x70fd2730, len = 0x30
	xa_dlb_intrinsics_lib_rodata : org = 0x70fd2760, len = 0x2d630
	xa_libc_rodata :               org = 0x70ffff10, len = 0xf0


	/*FPGA rom*/
/*	rom_boot :                     org = 0x6C000000, len = 0xC00
	rom_vector :                   org = 0x6C000C00, len = 0x400
	rom_text :                     org = 0x6C001000, len = 0x200000 - 0x1000
*/


	/*sFlash*/
/*	rom_boot :                     org = 0x6A000000, len = 0xC00
	rom_vector :                   org = 0x6A000C00, len = 0x400
	rom_text :                     org = 0x6A001000, len = 0x300000 - 0x1000
*/

/*	rom_libc_text :                 org = 0x6a6AA400, len = 0x019C0+0x240
	rom_atmos_codec_text :          org = 0x6a6AC000, len = 0xD98E0+0x180
	rom_atmos_codec_rodata :        org = 0x6a785A60, len = 0x7A330+0x180
	rom_libc_rodata :               org = 0x6a7FFF10, len = 0xF0

	xa_libc_text :                 org = 0x6a6aa400, len = 0x19c0
	xa_dapv2_lib_text :            org = 0x6a6ac000, len = 0x37480	
	xa_mat_dec_lib_text :          org = 0x6a6e3480, len = 0xada0
	xa_ddplus_udc_lib_text :       org = 0x6a6ee220, len = 0x41380
	xa_dmx_lib_text :              org = 0x6a72f5a0, len = 0x2cf0
	xa_rsrc_lib_text :             org = 0x6a732290, len = 0x43a0
	xa_oar_lib_text :              org = 0x6a736630, len = 0xfed0
	xa_truehd_dec_lib_text :       org = 0x6a746500, len = 0x15470
	xa_fader_lib_text :            org = 0x6a75b970, len = 0x4d0
	xa_dlb_intrinsics_lib_text :   org = 0x6a75be40, len = 0x29aa0

	xa_dapv2_lib_rodata :          org = 0x6a785a60, len = 0x2bca0
	xa_mat_dec_lib_rodata :        org = 0x6a7b1700, len = 0x4d80
	xa_ddplus_udc_lib_rodata :     org = 0x6a7b6480, len = 0x10650
	xa_dmx_lib_rodata :            org = 0x6a7c6ae0, len = 0x32e0
	xa_rsrc_lib_rodata :           org = 0x6a7c9dc0, len = 0x510
	xa_oar_lib_rodata :            org = 0x6a7ca2e0, len = 0x64e0
	xa_truehd_dec_lib_rodata :     org = 0x6a7d07c0, len = 0x1f70
	xa_fader_lib_rodata :          org = 0x6a7d2730, len = 0x30
	xa_dlb_intrinsics_lib_rodata : org = 0x6a7d2760, len = 0x2d630
	xa_libc_rodata :               org = 0x6a7fff10, len = 0xf0
*/


/*	codec_txt_except_rodata :      org = 0x6C030000, len = 0x140000
	codec_txt_rodata :             org = 0x6C170000, len = 0xA0000
*/

/*	codec_txt_except_rodata :      org = 0x70030000, len = 0x140000
	codec_txt_rodata :             org = 0x70170000, len = 0xA0000
*/


	/*sFlash only for testing codec_txt_except_rodata and codec_txt_rodata*/
/*	rom_boot :                     org = 0x6A000000, len = 0xC00
	rom_vector :                   org = 0x6A000C00, len = 0x400

	codec_txt_except_rodata :      org = 0x6A001000, len = 0x140000
	codec_txt_rodata :             org = 0x6A141000, len = 0xA0000
	rom_text :                     org = 0x6A001000, len = 0x200000 - 0x1000
*/

	/*1024*128*5:  used,  0x99d80= 630144*/
	/*1024*128*10: used, 0x128420=1213472*/


	WindowVectors.text_seg :              org = 0x40000000, len = 0x178
	sram1_seg :                           org = (0x40000000 + 0x0000017C-0x4), len = 0x4
	Level2InterruptVector.text_seg :      org = (0x40000000 + 0x0000017C), len = 0x1C
	sram3_seg :                           org = (0x40000000 + 0x000001a0-0x8), len = 0x8
	Level3InterruptVector.text_seg :      org = (0x40000000 + 0x000001a0), len = 0x38
	sram5_seg :                           org = (0x40000000 + 0x000001e0-0x8), len = 0x8
	Level4InterruptVector.text_seg :      org = (0x40000000 + 0x000001e0), len = 0x38


	sram7_seg :                           org = (0x40000000 + 0x00000220-0x8), len = 0x8
	Level5InterruptVector.text_seg :      org = (0x40000000 + 0x00000220), len = 0x38

/*
	sram9_seg :                           org = (0x40000000 + 0x00000200-0x8), len = 0x8
	DebugExceptionVector.text_seg :       org = (0x40000000 + 0x00000200), len = 0x38	
*/

	sram11_seg :                          org = (0x40000000 + 0x00000260-0x8), len = 0x8
	NMIExceptionVector.text_seg :         org = (0x40000000 + 0x00000260), len = 0x38	
	sram13_seg :                          org = (0x40000000 + 0x0000029c-0x4), len = 0x4
	KernelExceptionVector.text_seg :      org = (0x40000000 + 0x0000029c), len = 0x1C
	sram15_seg :                          org = (0x40000000 + 0x000002bc-0x4), len = 0x4
	UserExceptionVector.text_seg :        org = (0x40000000 + 0x000002bc), len = 0x1C
	sram17_seg :                          org = (0x40000000 + 0x000002dc-0x4), len = 0x4
	DoubleExceptionVector.text_seg :      org = (0x40000000 + 0x000002dc), len = 0x1C

}


/* Default entry point: */
ENTRY(_ResetVector)


GROUP (

/*First,search lib path by customer */

lib/libhal.a
lib/libc.a 
lib/libgcc.a 
lib/libm.a
lib/libsim.a
/*lib/libgdbio.a*/


/*second, search default lib path by compiler*/
/*
libhal.a 
libc.a 
libgcc.a 
libm.a
libsim.a
libgdbio.a 
*/


/*customer libs*/
lib/Optek_lib_freeRTOS.a
/*lib/Optek_lib_freeRTOS_debug.a*/

/*
Debug/lib_btdm5.a
*/

/*
/FPGA/lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a
*/

/*
../../../../lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a
*/


lib/optek_lib_spdif_data_parse.a


lib/libxa_mp3_dec.a  


lib/libxa_mp3_enc.a  


/*the libs for Dolby ATMOS*/

xa_dapv2.a
xa_mat_dec.a
xa_ddplus_udc.a
xa_dmx.a
xa_rsrc.a
xa_oar.a
xa_truehd_dec.a
xa_fader.a
xa_dlb_intrinsics.a


/*the library for Dolby ddplus*/
/*
xa_ddplus_udc_for_ddplus.a
*/

xa_ddplus71_dec.a

)


SECTIONS
{
	.boot_text :
	{
		*(.ResetVector.text);
		. = ALIGN(4);
		*(.ResetVector.literal);
		. = ALIGN(4);

		*(.flash_boot_text.literal);
		. = ALIGN(4);
		*(.flash_boot_text);

		*(.boot_upgrade_text);
		. = ALIGN(4);
		*(.boot_upgrade_text.literal);
		. = ALIGN(4);
	} > rom_boot


	.vector :
	{
	} > rom_vector


/*	.WindowVectors.text :*/
	.WindowVectors.text : AT (LOADADDR(.vector) + SIZEOF(.vector))
	{
		__TEXT_ROM_START1 = LOADADDR(.vector) + SIZEOF(.vector);
		__TEXT_START1 = ABSOLUTE(.);
		_WindowVectors_text_start = ABSOLUTE(.);
		*(.WindowVectors.text)
		. = ALIGN(4);
		_WindowVectors_text_end = ABSOLUTE(.);
		__TEXT_START1_END = ABSOLUTE(.);
	} > WindowVectors.text_seg

/*	.Level2InterruptVector.literal :*/
	.Level2InterruptVector.literal : AT (LOADADDR(.WindowVectors.text) + SIZEOF(.WindowVectors.text))
	{
		__TEXT_ROM_START2 = LOADADDR(.WindowVectors.text) + SIZEOF(.WindowVectors.text);
		__TEXT_START2 = ABSOLUTE(.);
		_Level2InterruptVector_literal_start = ABSOLUTE(.);
		*(.Level2InterruptVector.literal)
		. = ALIGN(4);
		_Level2InterruptVector_literal_end = ABSOLUTE(.);
		__TEXT_START2_END = ABSOLUTE(.);
	} > sram1_seg

/*	.Level2InterruptVector.text :*/
	.Level2InterruptVector.text : AT (LOADADDR(.Level2InterruptVector.literal) + SIZEOF(.Level2InterruptVector.literal))
	{
		__TEXT_ROM_START3 = LOADADDR(.Level2InterruptVector.literal) + SIZEOF(.Level2InterruptVector.literal);
		__TEXT_START3 = ABSOLUTE(.);
		_Level2InterruptVector_text_start = ABSOLUTE(.);
		*(.Level2InterruptVector.text)
		. = ALIGN(4);
		_Level2InterruptVector_text_end = ABSOLUTE(.);
		__TEXT_START3_END = ABSOLUTE(.);
	} > Level2InterruptVector.text_seg

/*	.Level3InterruptVector.literal :*/
	.Level3InterruptVector.literal : AT (LOADADDR(.Level2InterruptVector.text) + SIZEOF(.Level2InterruptVector.text))
	{
		__TEXT_ROM_START4 = LOADADDR(.Level2InterruptVector.text) + SIZEOF(.Level2InterruptVector.text);
		__TEXT_START4 = ABSOLUTE(.);
		_Level3InterruptVector_literal_start = ABSOLUTE(.);
		*(.Level3InterruptVector.literal)
		. = ALIGN(4);
		_Level3InterruptVector_literal_end = ABSOLUTE(.);
		__TEXT_START4_END = ABSOLUTE(.);
	} > sram3_seg

/*	.Level3InterruptVector.text :*/
	.Level3InterruptVector.text : AT (LOADADDR(.Level3InterruptVector.literal) + SIZEOF(.Level3InterruptVector.literal))
	{
		__TEXT_ROM_START5 = LOADADDR(.Level3InterruptVector.literal) + SIZEOF(.Level3InterruptVector.literal);
		__TEXT_START5 = ABSOLUTE(.);
		_Level3InterruptVector_text_start = ABSOLUTE(.);
		*(.Level3InterruptVector.text)
		. = ALIGN(4);
		_Level3InterruptVector_text_end = ABSOLUTE(.);
		__TEXT_START5_END = ABSOLUTE(.);
	} > Level3InterruptVector.text_seg

/*	.Level4InterruptVector.literal :*/
	.Level4InterruptVector.literal : AT (LOADADDR(.Level3InterruptVector.text) + SIZEOF(.Level3InterruptVector.text))
	{
		__TEXT_ROM_START6 = LOADADDR(.Level3InterruptVector.text) + SIZEOF(.Level3InterruptVector.text);
		__TEXT_START6 = ABSOLUTE(.);
		_Level4InterruptVector_literal_start = ABSOLUTE(.);
		*(.Level4InterruptVector.literal)
		. = ALIGN(4);
		_Level4InterruptVector_literal_end = ABSOLUTE(.);
		__TEXT_START6_END = ABSOLUTE(.);
	} > sram5_seg

/*	.Level4InterruptVector.text :*/
	.Level4InterruptVector.text : AT (LOADADDR(.Level4InterruptVector.literal) + SIZEOF(.Level4InterruptVector.literal))
	{
		__TEXT_ROM_START7 = LOADADDR(.Level4InterruptVector.literal) + SIZEOF(.Level4InterruptVector.literal);
		__TEXT_START7 = ABSOLUTE(.);
		_Level4InterruptVector_text_start = ABSOLUTE(.);
		*(.Level4InterruptVector.text)
		. = ALIGN(4);
		_Level4InterruptVector_text_end = ABSOLUTE(.);
		__TEXT_START7_END = ABSOLUTE(.);
	} > Level4InterruptVector.text_seg

/*	.Level5InterruptVector.literal :*/
	.Level5InterruptVector.literal : AT (LOADADDR(.Level4InterruptVector.text) + SIZEOF(.Level4InterruptVector.text))
	{
		__TEXT_ROM_START8 = LOADADDR(.Level4InterruptVector.text) + SIZEOF(.Level4InterruptVector.text);
		__TEXT_START8 = ABSOLUTE(.);
		_Level5InterruptVector_literal_start = ABSOLUTE(.);
		*(.Level5InterruptVector.literal)
		. = ALIGN(4);
		_Level5InterruptVector_literal_end = ABSOLUTE(.);
		__TEXT_START8_END = ABSOLUTE(.);
	} > sram7_seg

/*	.Level5InterruptVector.text :*/
	.Level5InterruptVector.text : AT (LOADADDR(.Level5InterruptVector.literal) + SIZEOF(.Level5InterruptVector.literal))
	{
		__TEXT_ROM_START9 = LOADADDR(.Level5InterruptVector.literal) + SIZEOF(.Level5InterruptVector.literal);
		__TEXT_START9 = ABSOLUTE(.);
		_Level5InterruptVector_text_start = ABSOLUTE(.);
		*(.Level5InterruptVector.text)
		. = ALIGN(4);
		_Level5InterruptVector_text_end = ABSOLUTE(.);
		__TEXT_START9_END = ABSOLUTE(.);
	} > Level5InterruptVector.text_seg

/*	.DebugExceptionVector.literal :*/
/*	.DebugExceptionVector.literal : AT (LOADADDR(.Level5InterruptVector.text) + SIZEOF(.Level5InterruptVector.text))*/
/*	.DebugExceptionVector.literal : AT (LOADADDR(.Level4InterruptVector.text) + SIZEOF(.Level4InterruptVector.text))*/
/*	{*/
/*		__TEXT_ROM_START10 = LOADADDR(.Level5InterruptVector.text) + SIZEOF(.Level5InterruptVector.text);*/
/*		__TEXT_ROM_START10 = LOADADDR(.Level4InterruptVector.text) + SIZEOF(.Level4InterruptVector.text);
		__TEXT_START10 = ABSOLUTE(.);
		_DebugExceptionVector_literal_start = ABSOLUTE(.);
		*(.DebugExceptionVector.literal)
		. = ALIGN(4);
		_DebugExceptionVector_literal_end = ABSOLUTE(.);
		__TEXT_START10_END = ABSOLUTE(.);
	} > sram9_seg*/

/*	.DebugExceptionVector.text :*/
/*	.DebugExceptionVector.text : AT (LOADADDR(.DebugExceptionVector.literal) + SIZEOF(.DebugExceptionVector.literal))*/
/*	{
		__TEXT_ROM_START11 = LOADADDR(.DebugExceptionVector.literal) + SIZEOF(.DebugExceptionVector.literal);
		__TEXT_START11 = ABSOLUTE(.);
		_DebugExceptionVector_text_start = ABSOLUTE(.);
		*(.DebugExceptionVector.text)
		. = ALIGN(4);
		_DebugExceptionVector_text_end = ABSOLUTE(.);
		__TEXT_START11_END = ABSOLUTE(.);
	} > DebugExceptionVector.text_seg*/

/*	.NMIExceptionVector.literal :*/
/*	.NMIExceptionVector.literal : AT (LOADADDR(.DebugExceptionVector.text ) + SIZEOF(.DebugExceptionVector.text))*/
	.NMIExceptionVector.literal : AT (LOADADDR(.Level5InterruptVector.text ) + SIZEOF(.Level5InterruptVector.text))
	{
/*		__TEXT_ROM_START12 = LOADADDR(.DebugExceptionVector.text) + SIZEOF(.DebugExceptionVector.text);*/
		__TEXT_ROM_START12 = LOADADDR(.Level5InterruptVector.text) + SIZEOF(.Level5InterruptVector.text);
		__TEXT_START12 = ABSOLUTE(.);
		_NMIExceptionVector_literal_start = ABSOLUTE(.);
		*(.NMIExceptionVector.literal)
		. = ALIGN(4);
		_NMIExceptionVector_literal_end = ABSOLUTE(.);
		__TEXT_START12_END = ABSOLUTE(.);
	} > sram11_seg

/*	.NMIExceptionVector.text :*/
	.NMIExceptionVector.text : AT (LOADADDR(.NMIExceptionVector.literal) + SIZEOF(.NMIExceptionVector.literal))
	{
		__TEXT_ROM_START13 = LOADADDR(.NMIExceptionVector.literal) + SIZEOF(.NMIExceptionVector.literal);
		__TEXT_START13 = ABSOLUTE(.);
		_NMIExceptionVector_text_start = ABSOLUTE(.);
		*(.NMIExceptionVector.text)
		. = ALIGN(4);
		_NMIExceptionVector_text_end = ABSOLUTE(.);
		__TEXT_START13_END = ABSOLUTE(.);
	} > NMIExceptionVector.text_seg

/*	.KernelExceptionVector.literal :*/
	.KernelExceptionVector.literal : AT (LOADADDR(.NMIExceptionVector.text ) + SIZEOF(.NMIExceptionVector.text))
	{
		__TEXT_ROM_START14 = LOADADDR(.NMIExceptionVector.text) + SIZEOF(.NMIExceptionVector.text);
		__TEXT_START14 = ABSOLUTE(.);
		_KernelExceptionVector_literal_start = ABSOLUTE(.);
		*(.KernelExceptionVector.literal)
		. = ALIGN(4);
		_KernelExceptionVector_literal_end = ABSOLUTE(.);
		__TEXT_START14_END = ABSOLUTE(.);
	} > sram13_seg

/*	.KernelExceptionVector.text :*/
	.KernelExceptionVector.text : AT (LOADADDR(.KernelExceptionVector.literal) + SIZEOF(.KernelExceptionVector.literal))
	{
		__TEXT_ROM_START15 = LOADADDR(.KernelExceptionVector.literal) + SIZEOF(.KernelExceptionVector.literal);
		__TEXT_START15 = ABSOLUTE(.);
		_KernelExceptionVector_text_start = ABSOLUTE(.);
		*(.KernelExceptionVector.text)
		. = ALIGN(4);
		_KernelExceptionVector_text_end = ABSOLUTE(.);
		__TEXT_START15_END = ABSOLUTE(.);
	} > KernelExceptionVector.text_seg

/*	.UserExceptionVector.literal :*/
	.UserExceptionVector.literal : AT (LOADADDR(.KernelExceptionVector.text) + SIZEOF(.KernelExceptionVector.text))
	{
		__TEXT_ROM_START16 = LOADADDR(.KernelExceptionVector.text) + SIZEOF(.KernelExceptionVector.text);
		__TEXT_START16 = ABSOLUTE(.);
		_UserExceptionVector_literal_start = ABSOLUTE(.);
		*(.UserExceptionVector.literal)
		. = ALIGN(4);		
		_UserExceptionVector_literal_end = ABSOLUTE(.);
		__TEXT_START16_END = ABSOLUTE(.);
	} > sram15_seg

/*	.UserExceptionVector.text :*/
	.UserExceptionVector.text : AT (LOADADDR(.UserExceptionVector.literal) + SIZEOF(.UserExceptionVector.literal))
	{
		__TEXT_ROM_START17 = LOADADDR(.UserExceptionVector.literal) + SIZEOF(.UserExceptionVector.literal);
		__TEXT_START17 = ABSOLUTE(.);
		_UserExceptionVector_text_start = ABSOLUTE(.);
		*(.UserExceptionVector.text)
		. = ALIGN(4);
		_UserExceptionVector_text_end = ABSOLUTE(.);
		__TEXT_START17_END = ABSOLUTE(.);
	} > UserExceptionVector.text_seg

/*	.DoubleExceptionVector.literal :*/
	.DoubleExceptionVector.literal : AT (LOADADDR(.UserExceptionVector.text) + SIZEOF(.UserExceptionVector.text))
	{
		__TEXT_ROM_START18 = LOADADDR(.UserExceptionVector.text) + SIZEOF(.UserExceptionVector.text);
		__TEXT_START18 = ABSOLUTE(.);
		_DoubleExceptionVector_literal_start = ABSOLUTE(.);
		*(.DoubleExceptionVector.literal)
		. = ALIGN(4);
		_DoubleExceptionVector_literal_end = ABSOLUTE(.);
		__TEXT_START18_END = ABSOLUTE(.);
	} > sram17_seg

/*	.DoubleExceptionVector.text :*/
	.DoubleExceptionVector.text : AT (LOADADDR(.DoubleExceptionVector.literal ) + SIZEOF(.DoubleExceptionVector.literal))
	{
		__TEXT_ROM_START19 = LOADADDR(.DoubleExceptionVector.literal) + SIZEOF(.DoubleExceptionVector.literal);
		__TEXT_START19 = ABSOLUTE(.);
		_DoubleExceptionVector_text_start = ABSOLUTE(.);
		*(.DoubleExceptionVector.text)
		. = ALIGN(4);
		_DoubleExceptionVector_text_end = ABSOLUTE(.);
		__TEXT_START19_END = ABSOLUTE(.);
	} > DoubleExceptionVector.text_seg



/*	.vector_text_msg :*/
	.vector_text_msg (LOADADDR(.DoubleExceptionVector.text ) + SIZEOF(.DoubleExceptionVector.text)) :
	{
		. = ALIGN(4);
		_vector_text_msg_start = ABSOLUTE(.);

		LONG(_WindowVectors_text_start);
		LONG(_WindowVectors_text_end);
		LONG(LOADADDR(.WindowVectors.text));

		LONG(_Level2InterruptVector_literal_start);
		LONG(_Level2InterruptVector_literal_end);
		LONG(LOADADDR(.Level2InterruptVector.literal));

		LONG(_Level2InterruptVector_text_start);
		LONG(_Level2InterruptVector_text_end);
		LONG(LOADADDR(.Level2InterruptVector.text));

		LONG(_Level3InterruptVector_literal_start );
		LONG(_Level3InterruptVector_literal_end);
		LONG(LOADADDR(.Level3InterruptVector.literal));

		LONG(_Level3InterruptVector_text_start );
		LONG(_Level3InterruptVector_text_end );
		LONG(LOADADDR(.Level3InterruptVector.text));

		LONG(_Level4InterruptVector_literal_start);
		LONG(_Level4InterruptVector_literal_end);
		LONG(LOADADDR(.Level4InterruptVector.literal));

		LONG(_Level4InterruptVector_text_start);
		LONG(_Level4InterruptVector_text_end);
		LONG(LOADADDR(.Level4InterruptVector.text));

		LONG(_Level5InterruptVector_literal_start);
		LONG(_Level5InterruptVector_literal_end);
		LONG(LOADADDR(.Level5InterruptVector.literal));

		LONG(_Level5InterruptVector_text_start);
		LONG(_Level5InterruptVector_text_end);
		LONG(LOADADDR(.Level5InterruptVector.text));

/*
		LONG(_DebugExceptionVector_literal_start);
		LONG(_DebugExceptionVector_literal_end);
		LONG(LOADADDR(.DebugExceptionVector.literal));

		LONG(_DebugExceptionVector_text_start);
		LONG(_DebugExceptionVector_text_end);
		LONG(LOADADDR(.DebugExceptionVector.text));
*/

		LONG(_NMIExceptionVector_literal_start);
		LONG(_NMIExceptionVector_literal_end);
		LONG(LOADADDR(.NMIExceptionVector.literal));

		LONG(_NMIExceptionVector_text_start);
		LONG(_NMIExceptionVector_text_end);
		LONG(LOADADDR(.NMIExceptionVector.text));

		LONG(_KernelExceptionVector_literal_start );
		LONG(_KernelExceptionVector_literal_end );
		LONG(LOADADDR(.KernelExceptionVector.literal));

		LONG(_KernelExceptionVector_text_start);
		LONG(_KernelExceptionVector_text_end);
		LONG(LOADADDR(.KernelExceptionVector.text));	

		LONG(_UserExceptionVector_literal_start);
		LONG(_UserExceptionVector_literal_end);
		LONG(LOADADDR(.UserExceptionVector.literal));

		LONG(_UserExceptionVector_text_start );
		LONG(_UserExceptionVector_text_end);
		LONG(LOADADDR(.UserExceptionVector.text));

		LONG(_DoubleExceptionVector_literal_start);
		LONG(_DoubleExceptionVector_literal_end);
		LONG(LOADADDR(.DoubleExceptionVector.literal));	

		LONG(_DoubleExceptionVector_text_start);
		LONG(_DoubleExceptionVector_text_end);
		LONG(LOADADDR(.DoubleExceptionVector.text));

		LONG(0);
		LONG(0);
		LONG(0);

		. = ALIGN(4);
		_vector_text_msg_end = ABSOLUTE(.);
/*	} > srom*/
	} > rom_vector


/*
	.boot_rodata :
	{
		*(.boot_rodata)
	} > rom_end
*/

/*	.codec_txt_except_rodata :
	{
		. = ALIGN(4);
		
		*(.codec_txt_except_rodata)
	
		. = ALIGN(4);
	} > codec_txt_except_rodata


	.codec_txt_rodata :
	{
		. = ALIGN(4);
		
		*(.codec_txt_rodata)
	
		. = ALIGN(4);
	} > codec_txt_rodata
*/

	.btdm_rodata :
	{
		. = ALIGN(4);
		__TEXT_START34 = ABSOLUTE(.);
/*
		Debug/lib_btdm5.a (.rodata)
*/
/*		/FPGA/lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a (.rodata)*/

/*		../../../../lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a (.rodata)*/

		. = ALIGN(4);
		__TEXT_START34_END = ABSOLUTE(.);
	} > rom_text
/*	} > btdm_rom*/

	.rom_dummy_rodata1 :
	{
		*(.rom_dummy_rodata1)
/*	} > rom_libc_text*/
	} > xa_libc_text

	.xa_libc_text :
/*	.xa_libc_text (LOADADDR(.rom_dummy_rodata1) + SIZEOF(.rom_dummy_rodata1)) :*/
/*	.xa_libc_text : AT (LOADADDR(.rom_dummy_rodata1) + SIZEOF(.rom_dummy_rodata1))*/
	{
		. = ALIGN(16);
		__xa_libc_text_rom_start = LOADADDR(.rom_dummy_rodata1) + SIZEOF(.rom_dummy_rodata1);
		__xa_libc_text_ram_start = ABSOLUTE(.);

		*(.xa_libc_text)

/*		lib/libc.a (.literal .text)
		lib/libgcc.a (.literal .text)
		lib/libgdbio.a (.literal .text)
		lib/libhal.a (.literal .text)
*/


		/* from libc.a and from libgcc.a */
		lib/memcmp.o (.literal .text)
		lib/memmove.o (.literal .text)
		lib/memcpy.o (.literal .text)
		lib/memset.o (.literal .text)


		lib/_addsubdf3.o (.literal .text)
		lib/_muldf3.o (.literal .text)
		lib/_cmpdf2.o (.literal .text)
		lib/_fixdfsi.o (.literal .text)
		lib/_fixdfdi.o (.literal .text)
		lib/_divdi3.o (.literal .text)
		lib/vec_memcpy.o (.literal .text)
		lib/vec_memset.o (.literal .text)
		lib/softfloat_cmn_df.o (.literal .text)
		lib/softfloat_div_df.o (.literal .text)

		lib/_divsi3.o (.literal .text)
		lib/_modsi3.o (.literal .text)
		lib/_udivsi3.o (.literal .text)
		lib/_umodsi3.o (.literal .text)
		lib/_umulsidi3.o (.literal .text)
		lib/_ashldi3.o (.literal .text)
		lib/_floatsidf.o (.literal .text)
		lib/softfloat_cmn.o (.literal .text)
		lib/softfloat_cmn_div.o (.literal .text)


		/*it is used by the function `datmos_downmixer_init',
		`calculate_proper_downmix_mode' and
		`datmos_downmixer_get_num_of_out_channels'*/
		/*source/common/dpf_log.o (.literal .text)*/
		lib/dpf_log.o (.literal .text)

/*		KEEP(*(.init))
		KEEP(*(.init.literal))
*/
		. = ALIGN(16);

		__xa_libc_text_ram_end = ABSOLUTE(.);
/*	} > rom_libc_text*/
	} > xa_libc_text



	.rom_dummy_codec_rodata :
	{
		*(.rom_dummy_codec_rodata)
	} > rom_text


	/*use 0x5a50 bytes of space*/
/*	.xa_ddplus71_dec_lib_rodata :*/
	.xa_ddplus71_dec_lib_rodata (LOADADDR(.rom_dummy_codec_rodata) + SIZEOF(.rom_dummy_codec_rodata)) :
/*	.xa_ddplus71_dec_lib_rodata : AT (LOADADDR(.rom_dummy_codec_rodata) + SIZEOF(.rom_dummy_codec_rodata))*/
	{
		. = ALIGN(16);
		__xa_ddplus71_dec_lib_rodata_rom_start = LOADADDR(.rom_dummy_codec_rodata) + SIZEOF(.rom_dummy_codec_rodata);
		__xa_ddplus71_dec_lib_rodata_ram_start = ABSOLUTE(.);

		xa_ddplus71_dec.a (.rodata .rodata.*)
/*		*(.xa_ddplus71_dec_lib_rodata)*/

		. = ALIGN(16);
		__xa_ddplus71_dec_lib_rodata_ram_end = ABSOLUTE(.);
/*	} > xa_ddplus71_dec_lib_rodata*/
/*	} > d_ram*/
	} > rom_text


/*	.rom_dummy_codec_text :
	{
		*(.rom_dummy_codec_text)
	} > rom_text
*/

	/*use 0xd260 bytes of space*/
/*	.xa_ddplus71_dec_lib_text :*/
/*	.xa_ddplus71_dec_lib_text (LOADADDR(.xa_ddplus71_dec_lib_rodata) + SIZEOF(.xa_ddplus71_dec_lib_rodata)) :*/
	.xa_ddplus71_dec_lib_text : AT (LOADADDR(.xa_ddplus71_dec_lib_rodata) + SIZEOF(.xa_ddplus71_dec_lib_rodata))
	{
		. = ALIGN(16);
		__xa_ddplus71_dec_lib_text_rom_start = LOADADDR(.xa_ddplus71_dec_lib_rodata) + SIZEOF(.xa_ddplus71_dec_lib_rodata);
		__xa_ddplus71_dec_lib_text_ram_start = ABSOLUTE(.);

		xa_ddplus71_dec.a (.literal .text)
/*		*(.xa_ddplus71_dec_lib_text)*/

		. = ALIGN(16);
		__xa_ddplus71_dec_lib_text_ram_end = ABSOLUTE(.);
/*	} > xa_ddplus71_dec_lib_text*/
	} > i_ram



	.rom_dummy_rodata2 :
	{
		*(.rom_dummy_rodata2)
	} > xa_dapv2_lib_text

	.xa_dapv2_lib_text :
	{
		. = ALIGN(16);
		__xa_dapv2_lib_text_rom_start = LOADADDR(.rom_dummy_rodata2) + SIZEOF(.rom_dummy_rodata2);
		__xa_dapv2_lib_text_start = ABSOLUTE(.);

		xa_dapv2.a (.literal .text)
/*		*(.xa_dapv2_lib_text)*/

		. = ALIGN(16);
		__xa_dapv2_lib_text_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_text*/
	} > xa_dapv2_lib_text

	.xa_mat_dec_lib_text :
	{
		. = ALIGN(16);
		__xa_mat_dec_lib_text_rom_start = LOADADDR(.xa_dapv2_lib_text) + SIZEOF(.xa_dapv2_lib_text);
		__xa_mat_dec_lib_text_start = ABSOLUTE(.);

		xa_mat_dec.a (.literal .text)
/*		*(.xa_mat_dec_lib_text)*/

		. = ALIGN(16);
		__xa_mat_dec_lib_text_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_text*/
	} > xa_mat_dec_lib_text

	.xa_ddplus_udc_lib_text :
	{
		. = ALIGN(16);
		__xa_ddplus_udc_lib_text_rom_start = LOADADDR(.xa_mat_dec_lib_text) + SIZEOF(.xa_mat_dec_lib_text);
		__xa_ddplus_udc_lib_text_start = ABSOLUTE(.);

		xa_ddplus_udc.a (.literal .text)
/*		*(.xa_ddplus_udc_lib_text)*/

		. = ALIGN(16);
		__xa_ddplus_udc_lib_text_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_text*/
	} > xa_ddplus_udc_lib_text

	.xa_dmx_lib_text :
	{
		. = ALIGN(16);
		__xa_dmx_lib_text_rom_start = LOADADDR(.xa_ddplus_udc_lib_text) + SIZEOF(.xa_ddplus_udc_lib_text);
		__xa_dmx_lib_text_start = ABSOLUTE(.);

		xa_dmx.a (.literal .text)
/*		*(.xa_dmx_lib_text)*/

		. = ALIGN(16);
		__xa_dmx_lib_text_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_text*/
	} > xa_dmx_lib_text

	.xa_rsrc_lib_text :
	{
		. = ALIGN(16);
		__xa_rsrc_lib_text_rom_start = LOADADDR(.xa_dmx_lib_text) + SIZEOF(.xa_dmx_lib_text);
		__xa_rsrc_lib_text_start = ABSOLUTE(.);

		xa_rsrc.a (.literal .text)
/*		*(.xa_rsrc_lib_text)*/

		. = ALIGN(16);
		__xa_xa_rsrc_lib_text_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_text*/
	} > xa_rsrc_lib_text

	.xa_oar_lib_text :
	{
		. = ALIGN(16);
		__xa_oar_lib_text_rom_start = LOADADDR(.xa_rsrc_lib_text) + SIZEOF(.xa_rsrc_lib_text);
		__xa_oar_lib_text_start = ABSOLUTE(.);

		xa_oar.a (.literal .text)
/*		*(.xa_oar_lib_text)*/

		. = ALIGN(16);
		__xa_oar_lib_text_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_text*/
	} > xa_oar_lib_text

	.xa_truehd_dec_lib_text :
	{
		. = ALIGN(16);
		__xa_truehd_dec_lib_text_rom_start = LOADADDR(.xa_oar_lib_text) + SIZEOF(.xa_oar_lib_text);
		__xa_truehd_dec_lib_text_start = ABSOLUTE(.);

		xa_truehd_dec.a (.literal .text)
/*		*(.xa_truehd_dec_lib_text)*/

		. = ALIGN(16);
		__xa_truehd_dec_lib_text_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_text*/
	} > xa_truehd_dec_lib_text

	.xa_fader_lib_text :
	{
		. = ALIGN(16);
		__xa_fader_lib_text_rom_start = LOADADDR(.xa_truehd_dec_lib_text) + SIZEOF(.xa_truehd_dec_lib_text);
		__xa_fader_lib_text_start = ABSOLUTE(.);

		xa_fader.a (.literal .text)
/*		*(.xa_fader_lib_text)*/

		. = ALIGN(16);
		__xa_fader_lib_text_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_text*/
	} > xa_fader_lib_text

	.xa_dlb_intrinsics_lib_text :
	{
		. = ALIGN(16);
		__xa_dlb_intrinsics_lib_text_rom_start = LOADADDR(.xa_fader_lib_text) + SIZEOF(.xa_fader_lib_text);
		__xa_dlb_intrinsics_lib_text_start = ABSOLUTE(.);

		xa_dlb_intrinsics.a (.literal .text)
/*		*(.xa_dlb_intrinsics_lib_text)*/

		. = ALIGN(16);
		__xa_dlb_intrinsics_lib_text_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_text*/
	} > xa_dlb_intrinsics_lib_text


	.rom_dummy_rodata3 :
	{
		*(.rom_dummy_rodata3)
/*	} > rom_atmos_codec_rodata*/
	} > xa_dapv2_lib_rodata

	.xa_dapv2_lib_rodata :
	{
		. = ALIGN(16);
		__xa_dapv2_lib_rodata_rom_start = LOADADDR(.rom_dummy_rodata3) + SIZEOF(.rom_dummy_rodata3);
		__xa_dapv2_lib_rodata_start = ABSOLUTE(.);

		xa_dapv2.a (.rodata .rodata.*)
/*		*(.xa_dapv2_lib_rodata)*/

		. = ALIGN(16);
		__xa_dapv2_lib_rodata_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_rodata*/
	} > xa_dapv2_lib_rodata

	.xa_mat_dec_lib_rodata :
	{
		. = ALIGN(16);
		__xa_mat_dec_lib_rodata_rom_start = LOADADDR(.xa_dapv2_lib_rodata) + SIZEOF(.xa_dapv2_lib_rodata);
		__xa_mat_dec_lib_rodata_start = ABSOLUTE(.);

		xa_mat_dec.a (.rodata .rodata.*)
/*		*(.xa_mat_dec_lib_rodata)*/

		. = ALIGN(16);
		__xa_mat_dec_lib_rodata_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_rodata*/
	} > xa_mat_dec_lib_rodata

	.xa_ddplus_udc_lib_rodata :
	{
		. = ALIGN(16);
		__xa_ddplus_udc_lib_rodata_rom_start = LOADADDR(.xa_mat_dec_lib_rodata) + SIZEOF(.xa_mat_dec_lib_rodata);
		__xa_ddplus_udc_lib_rodata_start = ABSOLUTE(.);

		xa_ddplus_udc.a (.rodata .rodata.*)
/*		*(.xa_ddplus_udc_lib_rodata)*/

		. = ALIGN(16);
		__xa_ddplus_udc_lib_rodata_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_rodata*/
	} > xa_ddplus_udc_lib_rodata

	.xa_dmx_lib_rodata :
	{
		. = ALIGN(16);
		__xa_dmx_lib_rodata_rom_start = LOADADDR(.xa_ddplus_udc_lib_rodata) + SIZEOF(.xa_ddplus_udc_lib_rodata);
		__xa_dmx_lib_rodata_start = ABSOLUTE(.);

		xa_dmx.a (.rodata .rodata.*)
/*		*(.xa_dmx_lib_rodata)*/

		. = ALIGN(16);
		__xa_dmx_lib_rodata_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_rodata*/
	} > xa_dmx_lib_rodata

	.xa_rsrc_lib_rodata :
	{
		. = ALIGN(16);
		__xa_rsrc_lib_rodata_rom_start = LOADADDR(.xa_dmx_lib_rodata) + SIZEOF(.xa_dmx_lib_rodata);
		__xa_rsrc_lib_rodata_start = ABSOLUTE(.);

		xa_rsrc.a (.rodata .rodata.*)
/*		*(.xa_rsrc_lib_rodata)*/

		. = ALIGN(16);
		__xa_rsrc_lib_rodata_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_rodata*/
	} > xa_rsrc_lib_rodata

	.xa_oar_lib_rodata :
	{
		. = ALIGN(16);
		__xa_oar_lib_rodata_rom_start = LOADADDR(.xa_rsrc_lib_rodata) + SIZEOF(.xa_rsrc_lib_rodata);
		__xa_oar_lib_rodata_start = ABSOLUTE(.);

		xa_oar.a (.rodata .rodata.*)
/*		*(.xa_oar_lib_rodata)*/

		. = ALIGN(16);
		__xa_oar_lib_rodata_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_rodata*/
	} > xa_oar_lib_rodata

	.xa_truehd_dec_lib_rodata :
	{
		. = ALIGN(16);
		__xa_truehd_dec_lib_rodata_rom_start = LOADADDR(.xa_oar_lib_rodata) + SIZEOF(.xa_oar_lib_rodata);
		__xa_truehd_dec_lib_rodata_start = ABSOLUTE(.);

		xa_truehd_dec.a (.rodata .rodata.*)
/*		*(.xa_truehd_dec_lib_rodata)*/

		. = ALIGN(16);
		__xa_truehd_dec_lib_rodata_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_rodata*/
	} > xa_truehd_dec_lib_rodata

	.xa_fader_lib_rodata :
	{
		. = ALIGN(16);
		__xa_fader_lib_rodata_rom_start = LOADADDR(.xa_truehd_dec_lib_rodata) + SIZEOF(.xa_truehd_dec_lib_rodata);
		__xa_fader_lib_rodata_start = ABSOLUTE(.);

		xa_fader.a (.rodata .rodata.*)
/*		*(.xa_fader_lib_rodata)*/

		. = ALIGN(16);
		__xa_fader_lib_rodata_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_rodata*/
	} > xa_fader_lib_rodata

	.xa_dlb_intrinsics_lib_rodata :
	{
		. = ALIGN(16);
		__xa_dlb_intrinsics_lib_rodata_rom_start = LOADADDR(.xa_fader_lib_rodata) + SIZEOF(.xa_fader_lib_rodata);
		__xa_dlb_intrinsics_lib_rodata_start = ABSOLUTE(.);

		xa_dlb_intrinsics.a (.rodata .rodata.*)
/*		*(.xa_dlb_intrinsics_lib_rodata)*/

		. = ALIGN(16);
		__xa_dlb_intrinsics_lib_rodata_end = ABSOLUTE(.);
/*	} > rom_atmos_codec_rodata*/
	} > xa_dlb_intrinsics_lib_rodata

	.xa_libc_rodata :
	{
		. = ALIGN(16);
		__xa_libc_rodata_rom_start = LOADADDR(.xa_dlb_intrinsics_lib_rodata) + SIZEOF(.xa_dlb_intrinsics_lib_rodata);
		__xa_libc_rodata_text_start = ABSOLUTE(.);

		*(.xa_libc_text)

		. = ALIGN(16);

		__xa_libc_rodata_end = ABSOLUTE(.);
	} > xa_libc_rodata


/*	.rom_dummy_rodata4 :*/
	.rom_dummy_rodata4 (LOADADDR(.xa_ddplus71_dec_lib_text) + SIZEOF(.xa_ddplus71_dec_lib_text)) :
	{
		*(.rom_dummy_rodata4)
	} > rom_text

/*	.all_rodata :*/
	.all_rodata (LOADADDR(.rom_dummy_rodata4) + SIZEOF(.rom_dummy_rodata4)) :
/*	.all_rodata : AT (LOADADDR(.rom_dummy_rodata4) + SIZEOF(.rom_dummy_rodata4))*/
	{
		. = ALIGN(16);
		__all_rodata_rom_start = LOADADDR(.rom_dummy_rodata4) + SIZEOF(.rom_dummy_rodata4);
		__all_rodata_ram_start = ABSOLUTE(.);

		*(.rodata)
		*(.rodata.*)

		*(.clib.rodata)
		*(.clib.rodata.*)

		*(.rtos.rodata)
		*(.rtos.rodata.*)

		. = ALIGN(16);
		__all_rodata_ram_end = ABSOLUTE(.);

	} > rom_text
/*	} > d_ram*/
/*	} > all_data*/


/*	.btdm_data :*/
	.btdm_data (LOADADDR(.all_rodata) + SIZEOF(.all_rodata)) :
/*	.btdm_data : AT (LOADADDR(.all_rodata) + SIZEOF(.all_rodata))*/
	{
		. = ALIGN(4);
		__btdm_data_rom_start = LOADADDR(.all_rodata) + SIZEOF(.all_rodata);
		__btdm_data_start = ABSOLUTE(.);
/*
		Debug/lib_btdm5.a (.data)
*/
/*		/FPGA/lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a (.data)*/

/*		../../../../lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a (.data)*/

		. = ALIGN(4);
		__btdm_data_end = ABSOLUTE(.);

/*	} > d_ram*/
	} > rom_text


/*	.data :*/
/*	.data (LOADADDR(.btdm_data) + SIZEOF(.btdm_data)) :*/
/*	.data : AT (LOADADDR(.btdm_data) + SIZEOF(.btdm_data))*/
	.data : AT (LOADADDR(.btdm_data) + SIZEOF(.btdm_data))
	{
		. = ALIGN(8);
		__data_rom_start = LOADADDR(.btdm_data) + SIZEOF(.btdm_data);
		__data_ram_start = ABSOLUTE(.);

		*(.data)
		*(.data.*)

		*(.eh_frame)
		*(.eh_frame.*)


		*(.clib.data)
		*(.clib.data.*)


		*(.rtos.data)
		*(.data.data.*)

		. = ALIGN(8);
		__data_ram_end = ABSOLUTE(.);

	} > d_ram
/*	} > rom_text*/


/*	.flash_prog_text :*/
/*	.flash_prog_text (LOADADDR(.data) + SIZEOF(.data)) :*/
	.flash_prog_text : AT (LOADADDR(.data) + SIZEOF(.data))
	{
		. = ALIGN(4);
		__flash_prog_rom_start = LOADADDR(.data) + SIZEOF(.data);
		__flash_prog_ram_start = ABSOLUTE(.);

/*		source/common/app_flash_program.o (.literal .text)
		source/common/SpiFlash_W25QXX.o (.literal .text)*/

		*(.flash_prog_text.literal)
		*(.flash_prog_text.text)
		*(.flash_prog_text)

		. = ALIGN(4);
		__flash_prog_ram_end = ABSOLUTE(.);
/*	} > rom_text*/
	} > i_ram


/*	.libkernel_text :*/
/*	.libkernel_text (LOADADDR(.flash_prog_text) + SIZEOF(.flash_prog_text)) :*/
	.libkernel_text : AT (LOADADDR(.flash_prog_text) + SIZEOF(.flash_prog_text))
	{
		. = ALIGN(4);
		__libkernel_rom_start = LOADADDR(.flash_prog_text) + SIZEOF(.flash_prog_text);
		__libkernel_ram_start = ABSOLUTE(.);

/*		libkernel.a (.literal .text)*/

		*(.libkernel_text.literal)
		*(.libkernel_text.text)
		*(.libkernel_text)

		lib/Optek_lib_freeRTOS.a (.literal .text)

/*
		source/common/xtensa_vectors.o (.literal .text)
		source/common/xtensa_context.o (.literal .text)
*/

/*
		source/os/threadRTOS/xtensa_vectors.o (.literal .text)
		source/os/threadRTOS/xtensa_context.o (.literal .text)
*/


/*
		source/os/freeRTOS/Xtensa/xtensa_vectors.o (.literal .text)
		source/os/freeRTOS/Xtensa/xtensa_context.o (.literal .text)
*/

/*
		source/os/freeRTOS/portable/XCC/Xtensa/xtensa_vectors.o (.literal .text)
		source/os/freeRTOS/portable/XCC/Xtensa/xtensa_context.o (.literal .text)
*/

/*
		source/common/windowspill_asm.o (.literal .text)
*/

		lib/windowspill_asm.o (.literal .text)

/*
		source/common/xtensa_timer1.o (.literal .text)
*/

		. = ALIGN(4);
		__libkernel_ram_end = ABSOLUTE(.);
/*	} > rom_text*/
	} > i_ram


/*	.btdm_text :*/
	.btdm_text (LOADADDR(.libkernel_text) + SIZEOF(.libkernel_text)) :
/*	.btdm_text : AT (LOADADDR(.libkernel_text) + SIZEOF(.libkernel_text))*/
	{
		. = ALIGN(4);
		__TEXT_START34 = ABSOLUTE(.);
/*
		Debug/lib_btdm5.a (.literal .text)
*/
/*		/FPGA/lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a (.literal .text)*/

/*		../../../../lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a (.literal .text)*/

		. = ALIGN(4);
		__TEXT_START34_END = ABSOLUTE(.);
	} > rom_text
/*	} > btdm_rom*/
/*	} > srom*/



/*	.all_text :*/
	.all_text (LOADADDR(.btdm_text) + SIZEOF(.btdm_text)) :
/*	.all_text : AT (LOADADDR(.btdm_text) + SIZEOF(.btdm_text))*/
	{
		. = ALIGN(4);
		__all_text_rom_start = LOADADDR(.btdm_text) + SIZEOF(.btdm_text);
		__all_text_ram_start = ABSOLUTE(.);


		/* from libc.a and from libgcc.a */
/*		lib/memcmp.o (.literal .text)
		lib/memmove.o (.literal .text)
		lib/memcpy.o (.literal .text)
		lib/memset.o (.literal .text)


		lib/_addsubdf3.o (.literal .text)
		lib/_muldf3.o (.literal .text)
		lib/_cmpdf2.o (.literal .text)
		lib/_fixdfsi.o (.literal .text)
		lib/_fixdfdi.o (.literal .text)
		lib/_divdi3.o (.literal .text)
		lib/vec_memcpy.o (.literal .text)
		lib/vec_memset.o (.literal .text)
		lib/softfloat_cmn_df.o (.literal .text)
		lib/softfloat_div_df.o (.literal .text)

		lib/_divsi3.o (.literal .text)
		lib/_modsi3.o (.literal .text)
		lib/_udivsi3.o (.literal .text)
		lib/_umodsi3.o (.literal .text)
		lib/_umulsidi3.o (.literal .text)
		lib/_ashldi3.o (.literal .text)
		lib/_floatsidf.o (.literal .text)
		lib/softfloat_cmn.o (.literal .text)
		lib/softfloat_cmn_div.o (.literal .text)
*/

		/*it is used by the function `datmos_downmixer_init',
		calculate_proper_downmix_mode' and
		datmos_downmixer_get_num_of_out_channels'*/
		/*source/common/dpf_log.o (.literal .text)*/
/*		lib/dpf_log.o (.literal .text)*/

		KEEP(*(.init))
		KEEP(*(.init.literal))


/*
		source/common/*.o (.literal .text)
		source/hw/*.o (.literal .text)
*/

/*
		source/os/threadRTOS/*.o (.literal .text)
		source/os/freeRTOS/*.o (.literal .text)
*/


/*
		*(.literal .text)
*/


/*		*(.literal .text .literal.* .text.* .stub .gnu.warning .gnu.linkonce.literal.* .gnu.linkonce.t.*.literal .gnu.linkonce.t.*)*/
		*(.literal .text .literal.* .text.*)

		KEEP(*(.init))
		KEEP(*(.init.literal))


/*		*(.eh_frame.literal)
		*(.eh_frame.text)*.
*/

		. = ALIGN(4);
		__all_text_ram_end  = ABSOLUTE(.);
	
/*	} > i_ram*/
	} > rom_text


/*	.internal_ram_1_text :*/
	.internal_ram_1_text : AT (LOADADDR(.all_text) + SIZEOF(.all_text))
	{
		. = ALIGN(8);
		__internal_ram_1_rom_start = LOADADDR(.all_text) + SIZEOF(.all_text);
		__internal_ram_1_ram_start = ABSOLUTE(.);

		*(.internal_ram_1_text.literal)
		*(.internal_ram_1_text.text)
		*(.internal_ram_1_text)

/*		*(.eh_frame.literal)
		*(.eh_frame.text)
*/


/*		*(.dsp_critical_sec_text.literal)
		*(.dsp_critical_sec_text.text)
		*(.dsp_critical_sec_text)
*/

		. = ALIGN(8);
		__internal_ram_1_ram_end = ABSOLUTE(.);

	} > i_ram
/*	} > rom_1*/


	.btdm_bss (NOLOAD):
	{
		. = ALIGN(4);
/*
		Debug/lib_btdm5.a (.bss)
*/
/*		/FPGA/lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a (.bss)*/

/*		../../../../lib_btdm/bin/Optek_HiFi3_Dev_02/Debug/lib_btdm.a (.bss)*/

		. = ALIGN(4);
/*	} > btdm_bss_seg*/
	} > d_ram


	.codec_memory_bss (NOLOAD) :
	{
		. = ALIGN (16);

		*(.codec_memory_bss)
		*(.codec_memory_bss.*)

		. = ALIGN (16);
	} > codec_memory_bss


	.all_bss (NOLOAD):
	{
		. = ALIGN (16);
		_bss_start = ABSOLUTE(.);

		*(.bss)
		*(.bss.*)

		. = ALIGN (16);
		_bss_end = ABSOLUTE(.);
		
	} > d_ram
/*	} > all_bss*/
/*	} > rom_text*/
/*	} > external_memory_bss*/

	.clib_bss (NOLOAD):
	{
		. = ALIGN (16);
		_clib_bss_start = ABSOLUTE(.);

		*(.text._init_reent_bss)
		*(.text._init_reent_bss.*)

		*(COMMON)
		*(.clib.bss)
		*(.clib.bss*)
	    
		*(.clib.percpu.bss)
		*(.clib.percpu.bss*)

		*(.rtos.percpu.bss)
		*(.rtos.percpu.bss*)

		*(.rtos.bss)
		*(.rtos.bss*)

		. = ALIGN (16);
		_clib_bss_end = ABSOLUTE(.);
		_end = ABSOLUTE(.);

	} > d_ram
/*	} > all_bss*/
/*	} > rom_text*/


/*	_heap_sentry = 0x3fe20000;*/
/*	_heap_sentry = 0x70180000;*/
	_heap_sentry = 0x70FF0000;

	__stack = ORIGIN(d_ram_stack) + LENGTH(d_ram_stack);
	/*__stack = 0x70200000;*/

	VECTOR_BASE_ADDR = ORIGIN(i_ram_vector);
}


CODEC_MEMORY_START            = ORIGIN(d_ram_codec);

SFLASH_START_ADDR             = ORIGIN(rom_boot);

I_ROM_START_ADDR              =  ORIGIN(i_rom);

D_ROM_START_ADDR              =  ORIGIN(d_rom);

/*
DDPLUS_PERSISTENT_START      = ORIGIN(DDPLUS_PERSISTENT_BSS);
DDPLUS_SCRATCH_START         = ORIGIN(DDPLUS_SCRATCH_BSS);
DDPLUS_OUTPUT_START          = ORIGIN(DDPLUS_OUTPUT_BSS);
*/


AUX_STREAM_START           = ORIGIN(stream_memory_bss);
AUX_STREAM_END             = ORIGIN(stream_memory_bss) + LENGTH(stream_memory_bss);

/*
AUX_STREAM_START             = 0x70E00000;
AUX_STREAM_END               = 0x70E10000;
*/

/*
AUX_STREAM_START             = 0x70E00000;
AUX_STREAM_END               = 0x70F00000;
*/


SPDIF_STREAM_START           = ORIGIN(stream_memory_bss);
SPDIF_STREAM_END             = ORIGIN(stream_memory_bss) + LENGTH(stream_memory_bss);


/*
SPDIF_STREAM_START           = 0x70800000;
SPDIF_STREAM_END             = 0x70820000;
*/

/*
SPDIF_STREAM_START           = 0x70E00000;
SPDIF_STREAM_END             = 0x70E20000;
*/

/*
SPDIF_STREAM_START           = 0x70700000;
SPDIF_STREAM_END             = 0x71000000;
*/




/*_rom_store_table = 0;*/
/*
PROVIDE(_memmap_reset_vector = 0x40000300);
PROVIDE(_memmap_vecbase_reset = 0x60000000);
*/
/* Various memory-map dependent cache attribute settings: */
/*
_memmap_cacheattr_wb_base = 0x00004220;
_memmap_cacheattr_wt_base = 0x00001220;
_memmap_cacheattr_bp_base = 0x00002220;
_memmap_cacheattr_unused_mask = 0xFFFF000F;
_memmap_cacheattr_wb_trapnull = 0x2222422F;
_memmap_cacheattr_wba_trapnull  = 0x2222422F;
*/
/*
_memmap_cacheattr_wbna_trapnull = 0x2222522F;
*/
/*
_memmap_cacheattr_wt_trapnull = 0x2222122F;
_memmap_cacheattr_bp_trapnull = 0x2222222F;
_memmap_cacheattr_wb_strict = 0xFFFF422F;
_memmap_cacheattr_wt_strict = 0xFFFF122F;
_memmap_cacheattr_bp_strict = 0xFFFF222F;
_memmap_cacheattr_wb_allvalid = 0x22224222;
_memmap_cacheattr_wt_allvalid = 0x22221222;
_memmap_cacheattr_bp_allvalid = 0x22222222;
_memmap_region_map = 0x0000000E;
*/
/*
PROVIDE(_memmap_cacheattr_reset = _memmap_cacheattr_wb_trapnull);
*/


CODEC_MEMORY_START            = ORIGIN(d_ram_codec);

SFLASH_START_ADDR             = ORIGIN(rom_boot);

I_ROM_START_ADDR              =  ORIGIN(i_rom);

D_ROM_START_ADDR              =  ORIGIN(d_rom);

